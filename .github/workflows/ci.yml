---
name: CI

on: # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:
  Ruby:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.4-alpine3.20
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: miroha
      redis:
        image: redis:7.4.0-alpine3.20
        ports:
          - 6379:6379

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
      - name: Install the Node dependencies
        run: yarn install
      - name: Run the Ruby tests
        env:
          COVERAGE: true
          DATABASE_POOL: 10
          POSTGRES_USER: miroha
          RAILS_ENV: test
        run: bundle exec rails db:setup ruby:test

  JavaScript:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
      - name: Install the Node dependencies
        run: yarn install
      - name: Run the JavaScript tests
        run: yarn test:coverage

  Linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
      - name: Install the Node dependencies
        run: yarn install
      - name: Lint the ERB
        run: bundle exec erblint .
      - name: Lint the Ruby
        run: bundle exec rubocop --parallel
      - name: Lint the JavaScript
        run: yarn lint
      - name: Lint the CSS
        run: yarn lint:css

  Docker:
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Build the image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false

  Vulnerabilities:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Scan for vulnerabilities
        run: bundle exec brakeman --format github --no-pager
